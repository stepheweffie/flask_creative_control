HOW TO UPGRADE LIGHTSTREAMER
============================

First of all, please see CHANGELOG.HTML to know all the differences from
the previous versions of the Lightstreamer Server components.


---------------------------------------------------
Upgrading from 7.1.1 build 20200527 to This Version
---------------------------------------------------

If you have an existing installation of Lightstreamer 7.1.1 build 20200527,
then this new release only brings a few improvements in the Server and,
more significantly, introduces the removal of the resources of the
various SDKs from the distribution package. Now SDK resources, including the
CHANGELOG, can only be reached directly from the download page.
The Server improvements also involve a change in some of the deployed
third-party libraries.

So, we suggest you to do a fresh install of Lightstreamer 7.1.2, then:

- CONFIGURATION:
  You can copy your configuration files under the "conf" folder
  (e.g. lightstreamer_conf.xml, lightstreamer_log_conf.xml) and the ones
  under the "conf/mpn" folder unchanged in the new installation.
  lightstreamer_conf.xml has slightly changed though; so we suggest you to
  rather take note of any changes you performed and apply them to the new
  factory file. You can also use the online Configuration File Upgrade Tool,
  available at:
  https://service.lightstreamer.com/ConfigUpgrade

  On the other hand, if you have changed the launch scripts under "bin"
  (e.g. LS.sh, LS.bat), take note of any changes you performed and apply
  them to the new factory files.

- ADAPTERS:
  The Server upgrade to 7.1.2 also implies the upgrade of the SDK for
  Java In-Process Adapters to version 7.3.0 and of the Adapter Remoting
  Infrastructure to version 1.9.8, with no significant changes for both.
  So, you can deploy your existing Adapter binaries unchanged, in regard
  to both Java In-Process and Remote Adapters.

  Some of the Remote Adapter SDKs may have changed recently. On the download
  page you can find the current versions of the SDKs.
  In order to upgrade the adapters, read carefully through the CHANGELOG
  of the involved SDKs to learn about any possible compatibility issues.

- CLIENTS:
  The Server is compatible with all client libraries available at the time
  of release and with all previous client libraries, so your existing
  clients should work with no issues.

  Some of the client SDKs may have changed recently. On the download page
  you can find the current versions of the SDKs.
  In order to upgrade the clients, read carefully through the CHANGELOG
  of the involved SDKs to learn about any possible compatibility issues.

  The Server upgrade to 7.1.2 also implies the upgrade of the SDK for
  JMX Extensions to version 5.5.6, with no significant changes.
  Hence, if using custom managers based on the JMX Extension SDK, you
  can keep them unchanged.

- MPN MODULE DATABASE (where available):
  If leveraging the MPN module, you can deploy your exixting database
  unchanged on the new installation.

---------------------------------------------------
Upgrading from 7.1.0 build 20200124 to This Version
---------------------------------------------------

If you have an existing installation of Lightstreamer 7.1.0 build 20200124,
then this new release only brings a few bug fixes and improvements in the
Server and its related SDKs (ARI, JMX, TLCP), which also involves a couple
of new deployed third-party libraries.
Moreover, this new release introduces the removal of the resources of the
various SDKs from the distribution package. Now SDK resources, including the
CHANGELOG, can only be reached directly from the download page.

So, we suggest you to do a fresh install of Lightstreamer 7.1.2, then:

- CONFIGURATION:
  You can copy your configuration files under the "conf" folder
  (e.g. lightstreamer_conf.xml, lightstreamer_log_conf.xml) and the ones
  under the "conf/mpn" folder unchanged in the new installation.
  lightstreamer_conf.xml has slightly changed though; so we suggest you to
  rather take note of any changes you performed and apply them to the new
  factory file. You can also use the online Configuration File Upgrade Tool,
  available at:
  https://service.lightstreamer.com/ConfigUpgrade

  On the other hand, if you have changed the launch scripts under "bin"
  (e.g. LS.sh, LS.bat), take note of any changes you performed and apply
  them to the new factory files.

- ADAPTERS:
  The Server upgrade to 7.1.2 also implies the upgrade of the SDK for
  Java In-Process Adapters to version 7.3.0 and of the Adapter Remoting
  Infrastructure to version 1.9.8, with no significant changes for both.
  So, you can deploy your existing Adapter binaries unchanged, in regard
  to both Java In-Process and Remote Adapters.

  Some of the Remote Adapter SDKs may have changed recently. On the download
  page you can find the current versions of the SDKs.
  In order to upgrade the adapters, read carefully through the CHANGELOG
  of the involved SDKs to learn about any possible compatibility issues.

- CLIENTS:
  The Server is compatible with all client libraries available at the time
  of release and with all previous client libraries, so your existing
  clients should work with no issues.

  Some of the client SDKs may have changed recently. On the download page
  you can find the current versions of the SDKs.
  In order to upgrade the clients, read carefully through the CHANGELOG
  of the involved SDKs to learn about any possible compatibility issues.

  The Server upgrade to 7.1.2 also implies the upgrade of the JMX Extension
  SDK to version 5.5.6, which only adds features. If using custom managers,
  you should be able to keep them unchanged.

- MPN MODULE DATABASE (where available):
  If leveraging the MPN module, you can deploy your exixting database
  unchanged on the new installation.

---------------------------------------------------
Upgrading from 7.0.3 build 20190107 to This Version
---------------------------------------------------

If you have an existing installation of Lightstreamer 7.0.3 build 20190107,
then this new release brings bug fixes and various improvements in the Server
and some Client and Adapter SDKs. In particular, it brings a SDK for .NET
Standard Adapters, which supersedes the SDK for .NET Adapters; moreover,
the recently added SDK for .NET Standard Clients has embraced the Unified API
interface and has now superseded the SDK for .NET PCL Clients and enabled the
removal of the SDK for Unity Clients.
Moreover, this new release introduces the removal of the resources of the
various SDKs from the distribution package. Now SDK resources, including the
CHANGELOG, can only be reached directly from the download page.
The release also brings an upgrade of the Server's MPN Module implementation.
The various Server improvements also involve a change in the deployed
third-party libraries.

So, we suggest you to do a fresh install of Lightstreamer 7.1.2, then:

- CONFIGURATION:
  You can copy your configuration files under the "conf" folder
  (e.g. lightstreamer_conf.xml, lightstreamer_log_conf.xml)
  unchanged in the new installation.
  However, to take advantage of new configuration opportunities, we suggest
  you to rather take note of any changes you performed and apply them to the
  new factory files. For the main configuration file, lightstreamer_conf.xml,
  you can also use the online Configuration File Upgrade Tool, available at:
  https://service.lightstreamer.com/ConfigUpgrade

  If you are leveraging the MPN Module, the MPN related configuration files
  under the "conf/mpn" folder should be ported manually according with
  the Server CHANGELOG.

  If you are leveraging the possibility to define custom extensions to the
  logging subsystem, the deployment of such extensions may need to be modified
  according with the Server CHANGELOG.

  On the other hand, if you have changed the launch scripts under "bin"
  (e.g. LS.sh, LS.bat), take note of any changes you performed and apply
  them to the new factory files.

  Also consider that if you run the Server with a license of "file" type,
  a license upgrade may be needed.

- ADAPTERS:
  The Server upgrade to 7.1.2 also implies the upgrade of the Java In-Process
  Adapter SDK to version 7.3.0 and the upgrade of the Adapter Remoting
  Infrastructure to version 1.9.8.

  You should be able to deploy your existing Adapter binaries unchanged,
  but first check for possible corner cases in the CHANGELOG of the involved
  SDK (i.e. either Java In-Process Adapter SDK or Adapter Remoting
  Infrastructure).

  In order to upgrade the In-Process and Remote Adapters to newer SDK
  versions, read carefully through the CHANGELOG of the involved SDKs
  to learn about any possible compatibility issues.

- CLIENTS:
  The Server is compatible with all client libraries available at the time
  of release and with all previous client libraries, so your existing
  clients should work with no issues.
  The only exception regards Android clients leveraging the MPN support;
  see paragraph "Special Considerations on the GCM to FCM Transition" in the
  General Concepts document for clarifications.

  In order to upgrade the Clients to newer SDK versions, read carefully
  through the CHANGELOG of the involved SDKs to learn about any possible
  compatibility issues. In particular, if you run the Server with a license
  of "file" type, a license upgrade may be needed.
  However, if you are using the .NET Standard or .NET PCL or Unity Client SDK
  and wish to upgrade to the latest .NET Standard Client SDK, you will have
  to rewrite the code to comply with the Unified API interface.

  The Server upgrade to 7.1.2 also implies the upgrade of the JMX Extension
  SDK to version 5.5.6. If using custom managers, you should be able to keep
  them unchanged, but first check for possible corner cases in the CHANGELOG
  of the JMX SDK.

- MPN MODULE DATABASE (where available):
  If leveraging the MPN module, and the GCM service in particular, then the
  database contents should be migrated when ported to the new Server.
  To achieve that, please contact Lightstreamer support for instructions.

---------------------------------------------------
Upgrading from 7.0.2 build 20181003 to This Version
Upgrading from 7.0.1 build 20180614 to This Version
Upgrading from 7.0.0 build 20180228 to This Version
---------------------------------------------------

If you have an existing installation of Lightstreamer 7.0.0 build 20180228
through 7.0.2 build 20181003, then this new release brings bug fixes and
various improvements in the Server and some Client and Adapter SDKs
(with minor interface changes).
In particular, it brings a SDK for .NET Standard Adapters (which supersedes
the SDK for .NET Adapters) and a SDK for .NET Standard Clients based on the
Unified API interface (which also supersedes the SDK for .NET PCL Clients and
enables the removal of the SDK for Unity Clients).
Moreover, this new release introduces the removal of the resources of the
various SDKs from the distribution package. Now SDK resources, including the
CHANGELOG, can only be reached directly from the download page.
The release also brings an upgrade of the Server's MPN Module implementation.
The various Server improvements also involve a change in the deployed
third-party libraries.

So, we suggest you to do a fresh install of Lightstreamer 7.1.2, then:

- CONFIGURATION:
  You can copy your configuration files under the "conf" folder
  (e.g. lightstreamer_conf.xml, lightstreamer_log_conf.xml)
  unchanged in the new installation.
  However, to take advantage of new configuration opportunities, we suggest
  you to rather take note of any changes you performed and apply them to the
  new factory files. For the main configuration file, lightstreamer_conf.xml,
  a better option is to use the online Configuration File Upgrade Tool,
  available at:
  https://service.lightstreamer.com/ConfigUpgrade

  If you are leveraging the MPN Module, the MPN related configuration files
  under the "conf/mpn" folder should be ported manually according with
  the Server CHANGELOG.

  If you are leveraging the possibility to define custom extensions to the
  logging subsystem, the deployment of such extensions may need to be modified
  according with the Server CHANGELOG.

  On the other hand, if you have changed the launch scripts under "bin"
  (e.g. LS.sh, LS.bat), take note of any changes you performed and apply
  them to the new factory files.

  Also consider that if you run the Server with a license of "file" type,
  a license upgrade may be needed.

- ADAPTERS:
  The Server upgrade to 7.1.2 also implies the upgrade of the Java In-Process
  Adapter SDK to version 7.3.0 and the upgrade of the Adapter Remoting
  Infrastructure to version 1.9.8.

  You should be able to deploy your existing Adapter binaries unchanged,
  but first check for possible corner cases in the CHANGELOG of the involved
  SDK (i.e. either Java In-Process Adapter SDK or Adapter Remoting
  Infrastructure).

  In order to upgrade the In-Process and Remote Adapters to newer SDK
  versions, read carefully through the CHANGELOG of the involved SDKs
  to learn about any possible compatibility issues.

- CLIENTS:
  The Server is compatible with all client libraries available at the time
  of release and with all previous client libraries, so your existing
  clients should work with no issues.
  The only exception regards Android clients leveraging the MPN support;
  see paragraph "Special Considerations on the GCM to FCM Transition" in the
  General Concepts document for clarifications.

  In order to upgrade the Clients to newer SDK versions, read carefully
  through the CHANGELOG of the involved SDKs to learn about any possible
  compatibility issues. In particular, if you run the Server with a license
  of "file" type, a license upgrade may be needed.
  However, if you are using the .NET PCL or Unity Client SDK and wish to
  upgrade to the latest .NET Standard Client SDK, you will have to rewrite
  the code to comply with the Unified API interface.

  The Server upgrade to 7.1.2 also implies the upgrade of the JMX Extension
  SDK to version 5.5.6. If using custom managers, you should be able to keep
  them unchanged, but first check for possible corner cases in the CHANGELOG
  of the JMX SDK.

- MPN MODULE DATABASE (where available):
  If leveraging the MPN module, and the GCM service in particular, then the
  database contents should be migrated when ported to the new Server.
  To achieve that, please contact Lightstreamer support for instructions.

---------------------------------------------------
Upgrading from 6.1.0 build 20170123 to This Version
---------------------------------------------------

If you have an existing installation of Lightstreamer 6.1.0 build 20170123,
then this new release brings a brand new licensing mechanism, a wholly
revised MPN module and several improvements to the Server and some client SDKs.
In particular, it brings a SDK for .NET Standard Adapters (which supersedes
the SDK for .NET Adapters) and a SDK for .NET Standard Clients based on the
Unified API interface (which also supersedes the SDK for .NET PCL Clients), as
well as a new SDK for watchOS Clients. On the other hand, some obsolete client
SDKs have been removed (although clients based on them keep being supported).
Moreover, this new release introduces the removal of the resources of the
various SDKs from the distribution package. Now SDK resources, including the
CHANGELOG, can only be reached directly from the download page.
The various Server improvements also involve a change in the deployed
third-party libraries.

However, if you have an existing installation of Lightstreamer Moderato 6.1.0
build 20170123 and are upgrading to this release by leveraging the Community
edition, then the new release also brings many client SDKs; all the SDKs shown
in the download page are now available, although only one of which can be
activated. It also brings and several features that previously were hidden,
but that are still unavailable.

So, we suggest you to do a fresh install of Lightstreamer 7.1.2, then:

- CONFIGURATION:
  The lightstreamer_version_conf.xml file was replaced by the brand
  new lightstreamer_edition_conf.xml.
  Since license configuration was totally revised, you need to pass through
  the new file to configure properly the Lightstreamer Edition and License
  Type, according with your current contractual terms.
  Moreover, any changes you performed in lightstreamer_version_conf.xml
  to the <proxy> block and the <audit_log_path>, <automatic_update_check>,
  and <automatic_audit_upload> elements should also be applied to
  lightstreamer_edition_conf.xml.

  Take note of the changes you performed on the other configuration files under
  the "conf" folder (e.g. lightstreamer_conf.xml, lightstreamer_log_conf.xml)
  and apply your changes to the new factory configuration files.
  Do the same for the launch scripts under "bin" (e.g. LS.sh, LS.bat).
  For lightstreamer_conf.xml and lightstreamer_log_conf.xml, this may not be
  easy, so we suggest you using the online Configuration File Upgrade Tool;
  it is available at:
  https://service.lightstreamer.com/ConfigUpgrade

  However, if you are leveraging the MPN module, hence
  you have modified the <mpn> block in lightstreamer_conf.xml and the files
  under "conf/mpn", please contact Lightstreamer support for further
  instructions.

  If you are leveraging the possibility to define custom extensions to the
  logging subsystem, the deployment of such extensions may need to be modified
  according with the Server CHANGELOG.

- ADAPTERS:
  The Server upgrade to 7.1.2 also implies the upgrade of the Java In-Process
  Adapter SDK to version 7.3.0 and the upgrade of the Adapter Remoting
  Infrastructure to version 1.9.8.

  Your adapters.xml files should be revised according with the CHANGELOG for
  the relevant SDK (i.e. either Java In-Process Adapters SDK or Adapter
  Remoting Infrastructure). To simplify the operation, we suggest you using
  the online Configuration File Upgrade Tool; it is available at:
  https://service.lightstreamer.com/ConfigUpgrade

  After that, you can deploy your existing Adapter binaries unchanged, unless
  the MPN module is involved. If leveraging the MPN module,
  please read carefully through the CHANGELOG for the relevant SDK (i.e.
  either Java In-Process Adapters SDK or Adapter Remoting Infrastructure)
  for all the details changed.

  In order to upgrade the In-Process and Remote Adapters to newer SDK
  versions, read carefully through the CHANGELOG of the involved SDKs
  to learn about any possible compatibility issues.

- CLIENTS:
  The Server is compatible with all client libraries available at the time
  of release and with all previous client libraries, so your existing
  clients should work with no issues.
  However, if leveraging the MPN module (possible with some
  old client SDKs), consider that the support for Push Notifications on such
  old clients has been dropped and all client requests will be refused by the
  new Server. In that case, a porting to the newest client SDK will be needed.

  In order to upgrade the Clients to newer SDK versions, read carefully through
  the CHANGELOG of the involved SDKs to learn about any possible compatibility
  issues and if you need to recompile your code. In particular, if you run the
  Server with a license of "file" type, a license upgrade may be needed.
  However, if you are using the .NET PCL Client SDK and wish to upgrade
  to the latest .NET Standard Client SDK, you will have to rewrite the code
  to comply with the Unified API interface.

  The Server upgrade to 7.1.2 also implies the upgrade of the JMX Extension
  SDK to version 5.5.6. If using custom managers, you should be able to keep
  them unchanged, but first check for possible corner cases in the CHANGELOG
  of the JMX SDK.

- MPN MODULE DATABASE (where available):
  If leveraging the MPN module, the database should be migrated when ported
  to the new Server. To achieve that, please contact Lightstreamer support
  for instructions.

-----------------------------------------------
Upgrading from 6.0 or any 6.0.x to This Version
-----------------------------------------------

If you have an existing installation of Lightstreamer 6.0 build 20150121
through 6.0.3 build 20160905, we suggest you porting the installation
to 6.1.0 first, by downloading the 6.1.0 package and following the
provided upgrade instructions. Then you can proceed by referring to the
instructions for 6.1.0 above.

Note that, if you have an existing installation of Lightstreamer Moderato
and are upgrading to this release by leveraging the Community edition,
then in the first step you should upgrade to Lightstreamer Moderato 6.1.0.

Alternatively, to upgrade in a single step, we suggest you to do a fresh
install of Lightstreamer 7.1.2, then:

- CONFIGURATION:
  The lightstreamer_version_conf.xml file was replaced by the brand
  new lightstreamer_edition_conf.xml.
  Since license configuration was totally revised, you need to pass through
  the new file to configure properly the Lightstreamer Edition and License
  Type, according with your current contractual terms.
  Moreover, any changes you performed in lightstreamer_version_conf.xml
  to the <proxy> block and the <audit_log_path>, <automatic_update_check>,
  and <automatic_audit_upload> elements should also be applied to
  lightstreamer_edition_conf.xml.

  Then use the online Configuration File Upgrade Tool to automatically convert
  your configuration files to 7.1.2. Supported files are lightstreamer_conf.xml
  and lightstreamer_log_conf.xml in the "conf" folder (also for Lightstreamer
  Moderato). The online Configuration File Upgrade Tool is available at:
  https://service.lightstreamer.com/ConfigUpgrade

  For other configuration files under "conf" and the launch scripts under bin
  (e.g. LS.sh, LS.bat), take note of any changes you performed and apply them
  to the new factory files.
  However, if you launch the Server with custom scripts, please check the
  "compatibility notes" in the Server CHANGELOG.

  However, if you are leveraging the MPN module, hence
  you have modified the <mpn> block in lightstreamer_conf.xml and the files
  under "conf/mpn", please contact Lightstreamer support for further
  instructions.

  If you are leveraging the possibility to define custom extensions to the
  logging subsystem, the deployment of such extensions may need to be modified
  according with the Server CHANGELOG.

- ADAPTERS:
  The Server upgrade to 7.1.2 also implies the upgrade of the Java In-Process
  Adapter SDK to version 7.3.0 and the upgrade of the Adapter Remoting
  Infrastructure to version 1.9.8.

  Use the online Configuration File Upgrade Tool to automatically convert
  your adapters.xml files to 7.1.2 (Lightstreamer Moderato also supported).
  The tool is available at:
  https://service.lightstreamer.com/ConfigUpgrade

  After that, you can deploy your existing Adapter binaries unchanged, unless
  the MPN module is involved. If leveraging the MPN module,
  please read carefully through the CHANGELOG for the relevant SDK (i.e.
  either Java In-Process Adapters SDK or Adapter Remoting Infrastructure)
  for all the details changed.

  In order to upgrade the In-Process and Remote Adapters to newer SDK
  versions, read carefully through the CHANGELOG of the involved SDKs
  to learn about any possible compatibility issues.

- CLIENTS:
  The Server is compatible with all client libraries available at the time
  of release and with all previous client libraries, so your existing
  clients should work with no issues.
  However, if leveraging the MPN module (possible with some
  old client SDKs), consider that the support for Push Notifications on such
  old clients has been dropped and all client requests will be refused by the
  new Server. In that case, a porting to the newest client SDK will be needed.

  In order to upgrade the Clients to newer SDK versions, read carefully through
  the CHANGELOG of the involved SDKs to learn about any possible compatibility
  issues and if you need to recompile your code. In particular, if you run the
  Server with a license of "file" type, a license upgrade may be needed.
  However, if you are using the .NET or Windows Phone or winRT Client SDK
  and wish to upgrade to the latest .NET Standard Client SDK, you will have
  to rewrite the code to comply with the Unified API interface.

  The Server upgrade to 7.1.2 also implies the upgrade of the JMX Extension
  SDK to version 5.5.6. If using custom managers, you should be able to keep
  them unchanged, but first check for possible corner cases in the CHANGELOG
  of the JMX SDK.

- MPN MODULE DATABASE (where available):
  If leveraging the MPN module, the database should be migrated when ported
  to the new Server. To achieve that, please contact Lightstreamer support
  for instructions.

-----------------------------------------------------------------
Upgrading from all Previous Versions (before 6.0) to This Version
-----------------------------------------------------------------

Port your installation to version 6.1.0 first, by downloading the 6.1.0
package and following the provided upgrade instructions. Then you can proceed
by referring to the instructions for 6.1.0 above.

Note that, if you have an existing installation of Lightstreamer Moderato
and are upgrading to this release by leveraging the Community edition,
then in the first step you should upgrade to Lightstreamer Moderato 6.1.0.
